function G = randomGeodesic( input )
%
%     p = randomGeodesic(p)
%     p = randomGeodesic(D)
%
% This function returns a randomly-selected geodesic starting at the
% provided point p in the space of D-variate MVNs. The user may also
% specify simply the dimension D, for a random geodesic starting at the
% origin in D-variate MVN space.
%
% The geodesic is randomly generated by treating each individual parameter 
% defining the mean vector and covariance matrix as independent. This gives
% a number of parameters Np = D+D(D+1)/2, and a random point on the 
% Np-sphere is selected to create a unit-length vector from the tangent 
% space. 

if isstruct(input)
    
    % Validate the provided point and read out its dimension
    [p0, D] = validatePoints( input );
    
    % Transform this point to the origin
    [~, P, r] = affineToOrigin(p0);
    
else
    
    % Read out the dimension provided by user
    D = input;
    
    % Create a null transform as geodesic will begin at origin
    P = eye(D);
    r = zeros(D,1);
    
end

% Calculate number of parameters from dimension of the MVNs
Np = D + D*(D+1)/2;

% Find a random point on the Np-sphere
z = randn(Np,1);
z = z / norm(z);

% Grab out the first portion of the random vector - mean vector
v.mu = z(1:D);
% Grab out the remainder as the vectorisation of the covariance matrix
vSIGMA = z(D+1:end);
% Create a mask to easily access only the lower triangle
trilMask = tril( true(D) );
% Fill in the mask with its vector list of values
v.SIGMA = zeros(D);
v.SIGMA( trilMask ) = vSIGMA;
% Fill in the matrix's upper triangle with the same values
v.SIGMA = v.SIGMA + v.SIGMA' - diag( diag( v.SIGMA ) );

% Create a geodesic with this velocity beginning at the origin
G = struct('v',v,'P',P,'r',r);

end